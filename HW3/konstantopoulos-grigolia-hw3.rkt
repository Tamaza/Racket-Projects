#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.10.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 77 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 148 0 211 0 0 0 -1
-1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 0 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1           0 1685 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 203
(
 #"#reader(lib \"htdp-beginner-abbr-reader.ss\" \"lang\")((modname kons"
 #"tantopoulos-grigolia-hw3) (read-case-sensitive #t) (teachpacks ()) ("
 #"htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f"
 #")))"
) 0 0 4 29 1 #"\n"
0 0 17 3 24 #";; Homework assignment 3"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Theodoros Konstantopoulos (tkonstantopoulos)"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Irakli Grigolia (igrigolia)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 1"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"ad"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 8 #"duration"
0 0 24 3 1 #" "
0 0 14 3 4 #"cost"
0 0 24 3 1 #" "
0 0 14 3 11 #"nationally?"
0 0 24 3 1 #" "
0 0 14 3 9 #"timeaired"
0 0 24 3 1 #" "
0 0 14 3 8 #"numtimes"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; An AD is a (make-ad String Natural Number Boolean String Natural)"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; interp: represents an AD where"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;   name is the name of the AD"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;   duration is the duration of the AD in seconds"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;   cost is the cost of the AD in thousands of dollars"
0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #";;   nationally? is whether the AD is to be aired nationally (if tru"
 #"e) or locally (if false)"
) 0 0 24 29 1 #"\n"
0 0 17 3 64
#";;   timeaired is the time of the day that the AD is to be aired"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;   numtimes is the number of times that the AD is to be aired"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; TimeOfDay is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";;   - \"daytime\""
0 0 24 29 1 #"\n"
0 0 17 3 18 #";;   - \"primetime\""
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;   - \"off-hour\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; A ListOfAd is one of"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   empty"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;   (cons AD ListOfAd)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"AD1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Apple\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"AD2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Microsoft\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 4 #"1200"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"primetime\""
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"AD1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"AD2"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Google\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Oracle\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"off-hour\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Toyota\""
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 3 #"750"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"off-hour\""
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"YouTube\""
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 2"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         301 21           0 0           0 49 0 17 3 16
#";; ad-fcn: Ad ->"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ad-fcn"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 7 #"ad-name"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"ad-duration"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 7 #"ad-cost"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 14 #"ad-nationally?"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 12 #"ad-timeaired"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 11 #"ad-numtimes"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 3 #")))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         271 21           0 0           0 44 0 17 3 13
#";; loa-fcn ->"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"loa-fcn"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 6 #"ad-fcn"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 7 #"loa-fcn"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 6 #")))]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 3"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; more-than: AD Natural -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Consumes an ad and produces"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; true if the ad time exceeds the given time or"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; false if the ad running time is less than or equal to the given t"
 #"ime"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"more-than"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"P&G\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"more-than"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"P&G\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"more-than"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 11 #"ad-duration"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 2 #") "
0 0 14 3 4 #"time"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; primetime-ad?: AD -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Consumes an ad and produces"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; true if the ad runs on primetime or"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; false if the ad does not run on primetime"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"primetime-ad?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"GE\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"primetime\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"primetime-ad?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"VW\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"primetime-ad?"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ad-timeaired"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 2 #") "
0 0 19 3 11 #"\"primetime\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; count-long-primetime: ListOfAd Natural -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Consumes a ListOfAd and an amount of time"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; and produces the number of primetime ads in the list"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; that run longer than the given number of seconds"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"count-long-primetime"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"count-long-primetime"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"count-long-primetime"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"count-long-primetime"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP1"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"count-long-primetime"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"count-long-primetime"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP1"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"count-long-primetime"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"count-long-primetime"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Unilever\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"off-hour\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"count-long-primetime"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 9 #"more-than"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 2 #") "
0 0 14 3 4 #"time"
0 0 24 3 3 #") ("
0 0 14 3 13 #"primetime-ad?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 20 #"count-long-primetime"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 2 #") "
0 0 14 3 4 #"time"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 20 #"count-long-primetime"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 24 3 2 #") "
0 0 14 3 4 #"time"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 4"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; runs-on?: AD time-of-day -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; Consumes an ad and a time of the day and produces"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; true if the ad runs on the specific time of the day"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; or false if it doesn't"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"runs-on?"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #" "
0 0 14 3 11 #"time-of-day"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ad-timeaired"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 2 #") "
0 0 14 3 11 #"time-of-day"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; any-ads-in-timeslot?: ListOfAd String -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; Consumes a ListOfAd and a TimeOfDay and produces true if the list"
 #" contains any ads"
) 0 0 24 29 1 #"\n"
0 0 17 3 36 #";; that run on the given time of day"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"any-ads-in-timeslot?"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"any-ads-in-timeslot?"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP1"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"any-ads-in-timeslot?"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP2"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"any-ads-in-timeslot?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Unilever\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"off-hour\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"off-hour\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"any-ads-in-timeslot?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 1 #" "
0 0 14 3 11 #"time-of-day"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"runs-on?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 2 #") "
0 0 14 3 11 #"time-of-day"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 20 #"any-ads-in-timeslot?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 2 #") "
0 0 14 3 11 #"time-of-day"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 5"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; national-ads: ListOfAd -> ListOfAd"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; Consumes a ListOfAd and produces a list containing only"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; the ads airing nationally"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"national-ads"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"national-ads"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Apple\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Microsoft\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 4 #"1200"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"primetime\""
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"national-ads"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"AD1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Apple\""
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"national-ads"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Coca Cola\""
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 4 #"1500"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"national-ads"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"YouTube\""
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"national-ads"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 14 #"ad-nationally?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 3 #") ("
0 0 14 3 12 #"national-ads"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 12 #"national-ads"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 6"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; off-hours?: AD -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Consumes an ad and produces"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; true if the add runs during the off-hours"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; or false if it doesn't"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"off-hours?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Oracle\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"off-hour\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"off-hours?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Oracle\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"off-hours?"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ad-timeaired"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"off-hour\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; get-name: AD -> String"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; Consumes and ad and produces"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; the name of the product of the AD"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-name"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"YouTube\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 19 3 9 #"\"YouTube\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-name"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Oracle\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"off-hour\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 19 3 8 #"\"Oracle\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-name"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"ad-name"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; late-night-products: ListOfAd -> ListOfString"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Consumes a list of ads and produces"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; a list of strings that contains"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; the name of the products that are advertised"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; during the off-hours"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"late-night-products"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP1"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"late-night-products"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Oracle\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"late-night-products"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Toyota\""
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"late-night-products"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 10 #"off-hours?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-name"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 4 #")) ("
0 0 14 3 19 #"late-night-products"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 19 #"late-night-products"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 7"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; determine-cost-blocks: Boolean Natural -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; Consumes the type of the ad (true, if the ad is aired in the nati"
 #"onal market or"
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #";; false, if the ad is aired in the local market)"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; and the duration (in seconds)"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; and produces the cost of an ad depending on"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; whether the ad is aired in the national or local market"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"determine-cost-blocks"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 21 3 6 #"200000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"determine-cost-blocks"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 21 3 5 #"10000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"determine-cost-blocks"
0 0 24 3 1 #" "
0 0 14 3 9 #"national?"
0 0 24 3 1 #" "
0 0 14 3 7 #"seconds"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 9 #"national?"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 7 #"seconds"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 21 3 6 #"100000"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 9 #"national?"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 7 #"seconds"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 21 3 4 #"5000"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; cost-discount: String Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; Consumes an ad airing cost and applies a discount"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; depending on the time of day in which the ad is to be aired"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"cost-discount"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 2 #"80"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"cost-discount"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"off-hour\""
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"cost-discount"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"primetime\""
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"cost-discount"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 1 #" "
0 0 14 3 4 #"cost"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"cost"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.8"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"off-hour\""
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"cost"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"primetime\""
0 0 24 3 2 #") "
0 0 14 3 4 #"cost"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; air-cost: AD -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; Consumes an ad and produces the cost of airing the ad"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; The cost of airing the ad is determined as follows:"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;   Airtime is sold in 30-second-spot blocks"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";;   Each 30-second-spot block costs $100,000 for the national marke"
 #"t"
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #";;   and $5,000 for a local market"
0 0 24 29 1 #"\n"
0 0 17 3 121
(
 #";;   A discount (applies for both national and local ads) of 20% is "
 #"applied to the cost if the ad is aired during daytime"
) 0 0 24 29 1 #"\n"
0 0 17 3 127
(
 #";;   and a discount (applies for both national and local ads) of 50%"
 #" is applied to the cost if the ad is aired during off-hours"
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";;   The air-cost is multiplied by the number of times the ad is to "
 #"be aired"
) 0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #";;   assuming that all airings of the ad occur in the same market at"
 #" the same time of day."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"air-cost"
0 0 24 3 1 #" "
0 0 14 3 3 #"AD1"
0 0 24 3 2 #") "
0 8          10 21 10 #"1600000/3\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"air-cost"
0 0 24 3 1 #" "
0 0 14 3 3 #"AD2"
0 0 24 3 2 #") "
0 0 21 3 7 #"1200000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"air-cost"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Pepsi\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 4 #"5000"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 5 #"80000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"air-cost"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"cost-discount"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ad-timeaired"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 21 #"determine-cost-blocks"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 14 #"ad-nationally?"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 11 #"ad-duration"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"ad-numtimes"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 8"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; total-ad-cost: AD -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; Consumes an ad and produces the total cost of the ad"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; The total cost of an ad consists of the sum of the cost"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; of producing the ad and the cost of airing the ad"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"total-ad-cost"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Fanta\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 4 #"5000"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"daytime\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 21 3 5 #"13000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"total-ad-cost"
0 0 24 3 1 #" "
0 0 14 3 3 #"AD2"
0 0 24 3 2 #") "
0 0 21 3 7 #"1201200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"total-ad-cost"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ad-cost"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 3 #") ("
0 0 14 3 8 #"air-cost"
0 0 24 3 1 #" "
0 0 14 3 5 #"an-ad"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Problem 9"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; expensive-ads: ListOfAd Number -> ListOfAd"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Consumes a list of ads and a number"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; and produces a list of those ads for which"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; the total cost exceeds the given number"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"expensive-ads"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP1"
0 0 24 3 1 #" "
0 0 21 3 6 #"600000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Microsoft\""
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 4 #"1200"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"primetime\""
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"expensive-ads"
0 0 24 3 1 #" "
0 0 14 3 9 #"AD-GROUP2"
0 0 24 3 1 #" "
0 0 21 3 5 #"20000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-ad"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Oracle\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"off-hour\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"expensive-ads"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 1 #" "
0 0 14 3 4 #"cost"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 13 #"total-ad-cost"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 3 #")) "
0 0 14 3 4 #"cost"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 3 #") ("
0 0 14 3 13 #"expensive-ads"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 2 #") "
0 0 14 3 4 #"cost"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 13 #"expensive-ads"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 24 3 2 #") "
0 0 14 3 4 #"cost"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0           0
